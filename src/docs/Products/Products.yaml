paths:
  /api/products/:
    get:
      summary: Get all products & Paginate options
      tags:
        - Products
      parameters:
        - in: query
          name: query
          schema:
            type: String
          description: The primary filter to paginate
        - in: query
          name: limit
          schema:
            type: Integer
          description: The number of items to return
        - in: query
          name: page
          schema:
            type: Integer
          description: The number of pages to return
        - in: query
          name: sort
          schema:
            type: String
            enum:
              - asc
              - desc
          description: The parameter to sort results
      responses:
        "200":
          description: Products get successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error
    post:
      summary: Add a Product
      tags:
        - Products
      requestBody:
        description: Product information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Product"
        "400":
         description: Error product already exists
        "401":
         description: Error Unauthorized
        "404":
         description: Error to create a product
        "500":
          description: Internal server error
  /api/products/{id}:
    get:
      summary: Get a Product by the Id
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $type: String
          description: Product specific Mongo autogenerated Id
      responses:
        "200":
          description: Product obtained through its Id successfully
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Product"
        "404":
         description: Error to get a product
        "500":
          description: Internal server error
    put:
      summary: Update a Product by the Id
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $type: String
          description: Product specific Mongo autogenerated Id
      requestBody:
        description: Product update information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "200":
          description: Product updated through its Id successfully
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Product"
        "404":
         description: Error to update a product
        "500":
          description: Internal server error
    delete:
      summary: Delete a Product by the Id
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $type: String
          description: Product specific Mongo autogenerated Id
      responses:
        "200":
          description: Product deleted through its Id successfully
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Product"
        "404":
         description: Error to delete a product
        "500":
          description: Internal server error
  /api/products/mockingproducts:
    get:
      summary: Get a determinated mocking Products
      tags:
        - Products
      responses:
        "200":
          description: Products (mocking) created successfully
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Product"
        "404":
         description: Error to create (mocking) products
        "500":
          description: Internal server error
components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: String
          description: Product name
        description:
          type: String
          description: Product description
        code:
          type: String
          description: Product unique code
        price:
          type: Number
          description: Product price
        status:
          type: Boolean
          default: true
          description: Product status of availability
        stock:
          type: Number
          description: Product stock
        category:
          type: String
          description: Product category
        thumbnails:
          type: Array
          description: Product descriptive images
      example:
        title: Camera x
        description: The x brand is the trademarked name of several series of chinese cameras.
        code: 968259dd-99e6-4341-a448-9557dcf9a324
        price: 346
        status: true
        stock: 64
        category: cameras
        thumbnails: ["./images/Without image"]
